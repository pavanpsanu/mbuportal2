{"version":3,"file":"ngx-doc-viewer.js","sources":["../../../../libs/helper.ts","../../../../libs/ngx-doc-viewer/src/lib/document-viewer.component.ts","../../../../libs/ngx-doc-viewer/src/lib/document-viewer.module.ts","../../../../libs/model.ts","../../../../libs/ngx-doc-viewer.ts"],"sourcesContent":["// eslint-disable-next-line no-var\r\ndeclare var mammoth: any;\r\nimport { IFrameReloader, ViewerType } from './model';\r\n\r\nexport const fileToArray = (url: string): Promise<ArrayBuffer> => {\r\n  return new Promise<ArrayBuffer>((resolve, reject) => {\r\n    try {\r\n      const request = new XMLHttpRequest();\r\n      request.open('GET', url, true);\r\n      request.responseType = 'blob';\r\n      request.onload = () => {\r\n        const reader = new FileReader();\r\n        reader.readAsArrayBuffer(request.response);\r\n        reader.onloadend = () => {\r\n          resolve(reader.result as ArrayBuffer);\r\n        };\r\n      };\r\n      request.send();\r\n    } catch {\r\n      reject(`error while retrieving file ${url}.`);\r\n    }\r\n  });\r\n};\r\n\r\nconst reloadIFrame = (iframe: HTMLIFrameElement) => {\r\n  if (iframe) {\r\n    console.log('reloading..');\r\n    // eslint-disable-next-line no-self-assign\r\n    iframe.src = iframe.src;\r\n  }\r\n};\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport const handleFileUpload = (fileInput: any) => {\r\n  return new Promise<string>((resolve, reject) => {\r\n    if (fileInput.target.files && fileInput.target.files[0]) {\r\n      const reader = new FileReader();\r\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n      reader.onload = (e: any) => {\r\n        resolve(e.target.result);\r\n      };\r\n      reader.readAsDataURL(fileInput.target.files[0]);\r\n    } else {\r\n      reject('no files selected');\r\n    }\r\n  });\r\n};\r\n\r\nexport const getbaseUrl = (): string => {\r\n  const pathArray = window.location.href.split('/');\r\n  const protocol = pathArray[0];\r\n  const host = pathArray[2];\r\n  return protocol + '//' + host;\r\n};\r\n\r\n\r\nexport const getLocation = (href: string) => {\r\n  const match = href.match(/^(https?\\:)\\/\\/(([^:\\/?#]*)(?:\\:([0-9]+))?)([\\/]{0,1}[^?#]*)(\\?[^#]*|)(#.*|)$/);\r\n  return match && {\r\n    href,\r\n    protocol: match[1],\r\n    host: match[2],\r\n    hostname: match[3],\r\n    port: match[4],\r\n    pathname: match[5],\r\n    search: match[6],\r\n    hash: match[7]\r\n  }\r\n}\r\n\r\nexport const getDocxToHtml = async (url: string) => {\r\n  if (!mammoth) {\r\n    console.error(\r\n      'Please install mammoth and make sure mammoth.browser.min.js is loaded.'\r\n    );\r\n  }\r\n  const arrayBuffer = await fileToArray(url);\r\n  const resultObject = await mammoth.convertToHtml({ arrayBuffer });\r\n  return resultObject.value;\r\n};\r\n\r\nexport const googleCheckSubscription = (): IFrameReloader => {\r\n  let subscription: any = null;\r\n  let checkCount = 0;\r\n  return {\r\n    subscribe: (iframe: HTMLIFrameElement, interval = 3000, maxChecks = 5) => {\r\n      if (!iframeIsLoaded(iframe)) {\r\n        subscription = setInterval(() => {\r\n          checkCount++;\r\n          if (checkCount >= maxChecks) {\r\n            clearInterval(subscription);\r\n          }\r\n          reloadIFrame(iframe);\r\n        }, interval);\r\n        return subscription;\r\n      } else {\r\n        if (subscription) {\r\n          clearInterval(subscription);\r\n        }\r\n      }\r\n    },\r\n    unsubscribe: () => {\r\n      if (subscription) {\r\n        clearInterval(subscription);\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\nexport const iframeIsLoaded = (iframe: HTMLIFrameElement) => {\r\n  // its #document <html><head></head><body></body></html> when google is returning a 204\r\n  // so if contentDocument = null then it's loaded.\r\n  let isLoaded = false;\r\n  try {\r\n    if (!internetExplorer()) {\r\n      isLoaded = !iframe?.contentDocument;\r\n    } else {\r\n      isLoaded = !iframe?.contentWindow?.document;\r\n    }\r\n  } catch {\r\n    // ignore message Blocked a frame with origin \"http://...\" from accessing a cross-origin frame.\r\n  }\r\n  return isLoaded;\r\n}\r\n\r\nconst internetExplorer = () =>\r\n  (/MSIE (\\d+\\.\\d+);/.test(navigator.userAgent) || navigator.userAgent.indexOf(\"Trident/\") > -1);\r\n\r\nexport const getViewerDetails = (\r\n  url: string,\r\n  configuredViewer: ViewerType = 'google',\r\n  queryParams = '',\r\n  viewerUrl = ''\r\n) => {\r\n  switch (configuredViewer) {\r\n    case 'google':\r\n      viewerUrl = `https://docs.google.com/gview?url=%URL%&embedded=true`;\r\n      break;\r\n    case 'office': {\r\n      viewerUrl = `https://view.officeapps.live.com/op/embed.aspx?src=%URL%`;\r\n      break;\r\n    }\r\n    case 'pdf': {\r\n      viewerUrl = '';\r\n      break;\r\n    }\r\n  }\r\n  const externalViewer =\r\n    configuredViewer === 'google' ||\r\n    configuredViewer === 'office' ||\r\n    configuredViewer === 'url';\r\n\r\n  const u = url?.indexOf('/') ? encodeURIComponent(url) : url;\r\n  let fullUrl = viewerUrl ? viewerUrl.replace('%URL%', u) : url;\r\n  if (queryParams && externalViewer && configuredViewer !== 'url') {\r\n    const start = queryParams.startsWith('&') ? '' : '&';\r\n    fullUrl = `${fullUrl}${start}${queryParams}`;\r\n  }\r\n  return {\r\n    url: fullUrl,\r\n    externalViewer,\r\n  };\r\n};\r\n\r\nexport const replaceLocalUrl = (url: string, overrideLocalhost: string) => {\r\n  const loc = getLocation(url);\r\n  const locReplace = getLocation(overrideLocalhost);\r\n  if (loc && locReplace) {\r\n    return url.replace(loc.port ? `${loc.hostname}:${loc.port}` : loc.hostname,\r\n      locReplace.port ? `${locReplace.hostname}:${locReplace.port}` : locReplace.hostname);\r\n  }\r\n  return url;\r\n}\r\n\r\nconst getBlobFromUrl = (url: string) => {\r\n  return new Promise<File>((resolve, reject) => {\r\n    let request = new XMLHttpRequest();\r\n    request.open('GET', url, true);\r\n    request.responseType = 'blob';\r\n    request.onload = () => {\r\n      resolve(request.response as File);\r\n    };\r\n    request.onerror = reject;\r\n    request.send();\r\n  })\r\n}\r\n\r\n\r\nexport const uploadToCloud = (fileUrl: string, api: string) => new Promise((resolve, reject) => {\r\n  getBlobFromUrl(fileUrl).then(blob => {\r\n    const loc = getLocation(fileUrl);\r\n    const name = loc?.pathname ? loc?.pathname?.split('/')[loc?.pathname?.split('/').length - 1] : '';\r\n    const formData = new FormData();\r\n    const request = new XMLHttpRequest();\r\n    formData.append('file', blob, name);\r\n    request.onreadystatechange = e => {\r\n      if (request.readyState === XMLHttpRequest.DONE) {\r\n        if (request.status === 200) {\r\n          resolve(request.responseText);\r\n        } else {\r\n          reject(request.responseText);\r\n        }\r\n      }\r\n    };\r\n    request.onerror = reject;\r\n    request.open('post', api, true);\r\n    request.send(formData);\r\n  });\r\n});\r\n\r\nexport const isLocalFile = (file: string) => {\r\n  const loc = getLocation(file);\r\n  const hostname = loc?.hostname || '';\r\n  return (\r\n    (['localhost', '127.0.0.1', '', '::1'].includes(hostname))\r\n    || (hostname.startsWith('192.168.'))\r\n    || (hostname.startsWith('10.0.'))\r\n    || (hostname.endsWith('.local'))\r\n  )\r\n};","import {\r\n  Component,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  Output,\r\n  ViewChildren,\r\n  QueryList,\r\n  ElementRef,\r\n  AfterViewInit,\r\n} from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { EventEmitter } from '@angular/core';\r\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\r\nimport {\r\n  getDocxToHtml,\r\n  getViewerDetails,\r\n  googleCheckSubscription,\r\n  iframeIsLoaded,\r\n  isLocalFile,\r\n  replaceLocalUrl\r\n} from './../../../helper';\r\nimport {\r\n  IFrameReloader\r\n} from './../../../model';\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nexport type viewerType = 'google' | 'office' | 'mammoth' | 'pdf' | 'url';\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: 'ngx-doc-viewer',\r\n  templateUrl: 'document-viewer.component.html',\r\n  styles: [\r\n    `\r\n      :host {\r\n        display: block;\r\n      }\r\n      .container {\r\n        width: 100%;\r\n        height: 100%;\r\n        position: relative;\r\n      }\r\n      .overlay-popout-google {\r\n        width: 40px;\r\n        height: 40px;\r\n        right: 26px;\r\n        top: 11.5px;\r\n        position: absolute;\r\n        z-index: 1000;\r\n      }\r\n      .overlay-popout-office {\r\n        width: 100px;\r\n        height: 20px;\r\n        right: 0;\r\n        bottom: 0;\r\n        position: absolute;\r\n        z-index: 1000;\r\n      }\r\n      .overlay-full {\r\n        width: 100%;\r\n        height: 100%;\r\n        right: 0;\r\n        top: 0;\r\n        position: absolute;\r\n        z-index: 1000;\r\n      }\r\n      iframe {\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class NgxDocViewerComponent implements OnChanges, OnDestroy, AfterViewInit {\r\n  @Output() loaded: EventEmitter<void> = new EventEmitter();\r\n  @Input() url = '';\r\n  @Input() queryParams = '';\r\n  @Input() viewerUrl = '';\r\n  @Input() googleCheckInterval = 3000;\r\n  @Input() googleMaxChecks = 5;\r\n  @Input() disableContent: 'none' | 'all' | 'popout' | 'popout-hide' = 'none';\r\n  @Input() googleCheckContentLoaded = true;\r\n  @Input() viewer: viewerType;\r\n  @Input() overrideLocalhost: '';\r\n  @ViewChildren('iframe') iframes: QueryList<ElementRef>;\r\n\r\n  public fullUrl: SafeResourceUrl = null;\r\n  public externalViewer = false;\r\n  public docHtml = '';\r\n  public configuredViewer: viewerType = 'google';\r\n  private checkIFrameSubscription: IFrameReloader;\r\n  private shouldCheckIframe = false;\r\n\r\n  constructor(private domSanitizer: DomSanitizer, private ngZone: NgZone) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.shouldCheckIframe) {\r\n      const iframe = this.iframes?.first\r\n        ?.nativeElement as HTMLIFrameElement;\r\n      if (iframe) {\r\n        this.shouldCheckIframe = false;\r\n        this.reloadIframe(iframe);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.checkIFrameSubscription) {\r\n      this.checkIFrameSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  async ngOnChanges(changes: SimpleChanges): Promise<void> {\r\n    if (\r\n      changes &&\r\n      changes.viewer &&\r\n      (changes.viewer.isFirstChange ||\r\n        changes.viewer.currentValue !== changes.viewer.previousValue)\r\n    ) {\r\n      if (\r\n        this.viewer !== 'google' &&\r\n        this.viewer !== 'office' &&\r\n        this.viewer !== 'mammoth' &&\r\n        this.viewer !== 'pdf' &&\r\n        this.viewer !== 'url'\r\n      ) {\r\n        console.error(\r\n          `Unsupported viewer: '${this.viewer}'. Supported viewers: google, office, mammoth and pdf`\r\n        );\r\n      }\r\n      this.configuredViewer = this.viewer;\r\n    }\r\n\r\n    if (\r\n      (changes.url && changes.url.currentValue !== changes.url.previousValue) ||\r\n      (changes.viewer &&\r\n        changes.viewer.currentValue !== changes.viewer.previousValue) ||\r\n      (changes.viewerUrl &&\r\n        changes.viewerUrl.currentValue !== changes.viewerUrl.previousValue)\r\n    ) {\r\n      let viewerDetails = getViewerDetails(\r\n        this.url,\r\n        this.configuredViewer,\r\n        this.queryParams,\r\n        this.viewerUrl\r\n      );\r\n      this.externalViewer = viewerDetails.externalViewer;\r\n      if (viewerDetails.externalViewer && this.overrideLocalhost && isLocalFile(this.url)) {\r\n        const newUrl = replaceLocalUrl(this.url, this.overrideLocalhost);\r\n        viewerDetails = getViewerDetails(\r\n          newUrl,\r\n          this.configuredViewer,\r\n          this.queryParams,\r\n          this.viewerUrl\r\n        );\r\n      }\r\n      this.docHtml = '';\r\n      if (this.checkIFrameSubscription) {\r\n        this.checkIFrameSubscription.unsubscribe();\r\n      }\r\n      if (!this.url) {\r\n        this.fullUrl = null;\r\n      } else if (\r\n        viewerDetails.externalViewer ||\r\n        this.configuredViewer === 'url'\r\n      ) {\r\n        this.fullUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(\r\n          viewerDetails.url\r\n        );\r\n        // see:\r\n        // https://stackoverflow.com/questions/40414039/google-docs-viewer-returning-204-responses-no-longer-working-alternatives\r\n        // hack to reload iframe if it's not loaded.\r\n        // would maybe be better to use view.officeapps.live.com but seems not to work with sas token.\r\n        if (\r\n          this.configuredViewer === 'google' &&\r\n          this.googleCheckContentLoaded\r\n        ) {\r\n          this.ngZone.runOutsideAngular(() => {\r\n            // if it's not loaded after the googleIntervalCheck, then open load again.\r\n            const iframe = this.iframes?.first\r\n              ?.nativeElement as HTMLIFrameElement;\r\n            if (iframe) {\r\n              this.reloadIframe(iframe);\r\n            } else {\r\n              this.shouldCheckIframe = true;\r\n            }\r\n          });\r\n        }\r\n      } else if (this.configuredViewer === 'mammoth') {\r\n        this.docHtml = await getDocxToHtml(this.url);\r\n      }\r\n    }\r\n  }\r\n\r\n  private reloadIframe(iframe: HTMLIFrameElement) {\r\n    this.checkIFrameSubscription = googleCheckSubscription();\r\n    this.checkIFrameSubscription.subscribe(\r\n      iframe,\r\n      this.googleCheckInterval,\r\n      this.googleMaxChecks\r\n    );\r\n  }\r\n\r\n  iframeLoaded() {\r\n    const iframe = this.iframes?.first\r\n      ?.nativeElement as HTMLIFrameElement;\r\n    if (iframe && iframeIsLoaded(iframe)) {\r\n      this.loaded.emit(null);\r\n      if (this.checkIFrameSubscription) {\r\n        this.checkIFrameSubscription.unsubscribe();\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { NgxDocViewerComponent } from './document-viewer.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [NgxDocViewerComponent],\r\n  exports: [NgxDocViewerComponent],\r\n})\r\nexport class NgxDocViewerModule {}\r\n","export type ViewerType = 'google' | 'office' | 'mammoth' | 'pdf' | 'url';\r\n\r\ninterface Props {\r\n  loaded?: () => void;\r\n  url: string;\r\n  queryParams?: string;\r\n  viewerUrl?: string;\r\n  googleCheckInterval?: number;\r\n  disableContent?: 'none' | 'all' | 'poput' | 'popout-hide';\r\n  googleCheckContentLoaded?: boolean;\r\n  viewer?: ViewerType;\r\n}\r\n\r\nexport interface IFrameReloader {\r\n  subscribe: (\r\n    iframe: HTMLIFrameElement,\r\n    interval?: number,\r\n    maxChecks?: number\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  ) => any;\r\n  unsubscribe: () => void;\r\n}\r\n\r\nexport const defaultProps: Props = {\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  loaded: () => {},\r\n  disableContent: 'none',\r\n  googleCheckContentLoaded: true,\r\n  googleCheckInterval: 3000,\r\n  queryParams: '',\r\n  url: '',\r\n  viewer: 'google',\r\n  viewerUrl: '',\r\n};\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './ngx-doc-viewer-wrapper';\n"],"names":[],"mappings":"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"}